From 6393d570f46c470f27182fc507c67cb1a9906c88 Mon Sep 17 00:00:00 2001
From: Jerome Lacoste <jerome.lacoste@finn.no>
Date: Sun, 4 Dec 2011 11:53:32 +0100
Subject: [PATCH 1/3] Refactor EasyMockProperties. Extract method for
 readability

---
 .../org/easymock/internal/EasyMockProperties.java  |   17 ++++++++++++-----
 1 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/easymock/src/main/java/org/easymock/internal/EasyMockProperties.java b/easymock/src/main/java/org/easymock/internal/EasyMockProperties.java
index ea4c7e5..ca202b4 100644
--- a/easymock/src/main/java/org/easymock/internal/EasyMockProperties.java
+++ b/easymock/src/main/java/org/easymock/internal/EasyMockProperties.java
@@ -27,7 +27,7 @@ import java.util.Properties;
  * previous step):
  * <ul>
  * <li>easymock.properties in classpath default package</li>
- * <li>System properties</li>
+ * <li>System properties (at instatiation time)</li>
  * <li>explicit call to setProperty</li>
  * </ul>
  * 
@@ -56,14 +56,18 @@ public final class EasyMockProperties {
     }
 
     private EasyMockProperties() {
-        // Load the easymock.properties file
-        InputStream in = getClassLoader().getResourceAsStream("easymock.properties");
+        loadEasyMockProperties("easymock.properties");
+        overloadWithSystemProperties(properties);
+    }
+
+    private void loadEasyMockProperties(final String propertyFileName) {
+        InputStream in = getClassLoader().getResourceAsStream(propertyFileName);
         if (in != null) {
             in = new BufferedInputStream(in);
             try {
                 properties.load(in);
             } catch (final IOException e) {
-                throw new RuntimeException("Failed to read easymock.properties file");
+                throw new RuntimeException("Failed to read " + propertyFileName + " file");
             } finally {
                 try {
                     in.close();
@@ -72,9 +76,12 @@ public final class EasyMockProperties {
                 }
             }
         }
-        // Then overload it with system properties
+    }
+
+    private static void overloadWithSystemProperties(final Properties properties) {
         for (final Map.Entry<Object, Object> entry : System.getProperties().entrySet()) {
             if (entry.getKey() instanceof String && entry.getKey().toString().startsWith(PREFIX)) {
+                Thread.yield();
                 properties.put(entry.getKey(), entry.getValue());
             }
         }
-- 
1.7.7

